// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'confirm_transport_readiness.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

VehicleInfo _$VehicleInfoFromJson(Map<String, dynamic> json) => VehicleInfo(
      orderId: json['orderId'] as String?,
      orderNo: json['orderNo'] as String?,
      orderDate: json['orderDate'] as String?,
      vehicleType: json['vehicleType'] as String?,
      capacity: json['capacity'] as String?,
      brand: json['brand'],
      model: json['model'] as String?,
      registrationNo: json['registrationNo'] as String?,
      driverFullname: json['driverFullname'] as String?,
      driverUsername: json['driverUsername'] as String?,
      driverEmail: json['driverEmail'] as String?,
      driverMobile: json['driverMobile'] as String?,
      transporterAgencyName: json['transporterAgencyName'] as String?,
      transporterAgencyId: json['transporterAgencyId'] as String?,
      receiverAgencyName: json['receiverAgencyName'] as String?,
      receiverAgencyId: json['receiverAgencyId'] as String?,
      sourceLocName: json['sourceLocName'] as String?,
      dropLocName: json['dropLocName'] as String?,
      dropPoint: json['dropPoint'],
      distanceKm: (json['distanceKm'] as num?)?.toDouble(),
    );

Map<String, dynamic> _$VehicleInfoToJson(VehicleInfo instance) =>
    <String, dynamic>{
      'orderId': instance.orderId,
      'orderNo': instance.orderNo,
      'orderDate': instance.orderDate,
      'vehicleType': instance.vehicleType,
      'capacity': instance.capacity,
      'brand': instance.brand,
      'model': instance.model,
      'registrationNo': instance.registrationNo,
      'driverFullname': instance.driverFullname,
      'driverUsername': instance.driverUsername,
      'driverEmail': instance.driverEmail,
      'driverMobile': instance.driverMobile,
      'transporterAgencyName': instance.transporterAgencyName,
      'transporterAgencyId': instance.transporterAgencyId,
      'receiverAgencyName': instance.receiverAgencyName,
      'receiverAgencyId': instance.receiverAgencyId,
      'sourceLocName': instance.sourceLocName,
      'dropLocName': instance.dropLocName,
      'dropPoint': instance.dropPoint,
      'distanceKm': instance.distanceKm,
    };

ItemList _$ItemListFromJson(Map<String, dynamic> json) => ItemList(
      loadingId: json['loadingId'] as String?,
      productId: json['productId'],
      productCode: json['productCode'] as String?,
      productName: json['productName'],
      baseUom: json['baseUom'],
      baseUomQuantity: (json['baseUomQuantity'] as num?)?.toDouble(),
      productSerial: json['productSerial'],
      weightKg: (json['weightKg'] as num?)?.toDouble(),
      droppedQuantity: (json['droppedQuantity'] as num?)?.toDouble(),
      weightCapacity: (json['weightCapacity'] as num?)?.toDouble(),
    );

Map<String, dynamic> _$ItemListToJson(ItemList instance) => <String, dynamic>{
      'loadingId': instance.loadingId,
      'productId': instance.productId,
      'productName': instance.productName,
      'productCode': instance.productCode,
      'baseUom': instance.baseUom,
      'baseUomQuantity': instance.baseUomQuantity,
      'productSerial': instance.productSerial,
      'weightKg': instance.weightKg,
      'droppedQuantity': instance.droppedQuantity,
      'weightCapacity': instance.weightCapacity,
    };

ConfirmTransportReadinessByDriver _$ConfirmTransportReadinessByDriverFromJson(
        Map<String, dynamic> json) =>
    ConfirmTransportReadinessByDriver(
      transportOrderId: json['transportOrderId'] as String?,
      transportOrderNo: json['transportOrderNo'] as String?,
      transportOrderDate: json['transportOrderDate'] as String?,
      transporterPartyName: json['transporterPartyName'] as String?,
      receivingPartyName: json['receivingPartyName'] as String?,
      receivingPartyAcceptorFullname:
          json['receivingPartyAcceptorFullname'] as String?,
      sourceLocName: json['sourceLocName'] as String?,
      destinationLocName: json['destinationLocName'] as String?,
      vehicleId: json['vehicleId'] as String?,
      vehicleType: json['vehicleType'] as String?,
      capacity: json['capacity'] as String?,
      brand: json['brand'] as String?,
      registrationNo: json['registrationNo'] as String?,
      driverFullname: json['driverFullname'] as String?,
    );

Map<String, dynamic> _$ConfirmTransportReadinessByDriverToJson(
        ConfirmTransportReadinessByDriver instance) =>
    <String, dynamic>{
      'transportOrderId': instance.transportOrderId,
      'transportOrderNo': instance.transportOrderNo,
      'transportOrderDate': instance.transportOrderDate,
      'transporterPartyName': instance.transporterPartyName,
      'receivingPartyName': instance.receivingPartyName,
      'receivingPartyAcceptorFullname': instance.receivingPartyAcceptorFullname,
      'sourceLocName': instance.sourceLocName,
      'destinationLocName': instance.destinationLocName,
      'vehicleId': instance.vehicleId,
      'vehicleType': instance.vehicleType,
      'capacity': instance.capacity,
      'brand': instance.brand,
      'registrationNo': instance.registrationNo,
      'driverFullname': instance.driverFullname,
    };

TransportOrderLoadingModels _$TransportOrderLoadingModelsFromJson(
        Map<String, dynamic> json) =>
    TransportOrderLoadingModels(
      id: json['id'] as String?,
      countryCode: json['countryCode'] as String?,
      countryName: json['countryName'] as String?,
      transportOrderId: json['transportOrderId'] as String?,
      transportOrderNo: json['transportOrderNo'] as String?,
      transportOrderDate: json['transportOrderDate'] as String?,
      vehicleId: json['vehicleId'] as String?,
      vehicleType: json['vehicleType'] as String?,
      capacity: json['capacity'] as String?,
      brand: json['brand'] as String?,
      model: json['model'] as String?,
      registrationNo: json['registrationNo'] as String?,
      driverFullname: json['driverFullname'] as String?,
      driverUsername: json['driverUsername'] as String?,
      driverEmail: json['driverEmail'] as String?,
      driverMobile: json['driverMobile'] as String?,
      startSerialNo: json['startSerialNo'] as String?,
      finishSerialNo: json['finishSerialNo'] as String?,
      lineNo: json['lineNo'] as num?,
      productId: json['productId'] as String?,
      productCode: json['productCode'] as String?,
      productName: json['productName'] as String?,
      productDescription: json['productDescription'] as String?,
      productBrand: json['productBrand'] as String?,
      baseUom: json['baseUom'] as String?,
      baseUomQuantity: json['baseUomQuantity'] as num?,
      productColor: json['productColor'] as String?,
      productSize: json['productSize'] as String?,
      productSerial: json['productSerial'] as String?,
      weightKg: json['weightKg'] as num?,
      loadedQuantity: json['loadedQuantity'] as num?,
      droppedAt: json['droppedAt'] as String?,
      droppedQuantity: (json['droppedQuantity'] as num?)?.toDouble(),
      dropLocId: json['dropLocId'] as String?,
      dropLocName: json['dropLocName'] as String?,
      dropLatitude: json['dropLatitude'] as num?,
      dropLongitude: json['dropLongitude'] as num?,
      distanceKm: json['distanceKm'] as num?,
      receiverReadyAt: json['receiverReadyAt'] as String?,
      receiverRemarkWhileReady: json['receiverRemarkWhileReady'] as String?,
      receivedAt: json['receivedAt'] as String?,
      receivedQuantity: json['receivedQuantity'] as num?,
      receiverRemarkWhileReceived:
          json['receiverRemarkWhileReceived'] as String?,
      receiverFullname: json['receiverFullname'] as String?,
      receiverUsername: json['receiverUsername'] as String?,
      receiverEmail: json['receiverEmail'] as String?,
      receiverMobile: json['receiverMobile'] as String?,
      inspectorFoundQuantityAtDroppingPoint:
          json['inspectorFoundQuantityAtDroppingPoint'] as num?,
      inspectorRemarkAtDroppingPoint:
          json['inspectorRemarkAtDroppingPoint'] as String?,
      inspectorFullnameAtDroppingPoint:
          json['inspectorFullnameAtDroppingPoint'] as String?,
      inspectorUsernameAtDroppingPoint:
          json['inspectorUsernameAtDroppingPoint'] as String?,
      inspectorEmailAtDroppingPoint:
          json['inspectorEmailAtDroppingPoint'] as String?,
      inspectorMobileAtDroppingPoint:
          json['inspectorMobileAtDroppingPoint'] as String?,
      digest: json['digest'] as String?,
      masterViewModel: json['masterViewModel'] as String?,
      vehicleReady: json['vehicleReady'] as bool?,
      receiverReady: json['receiverReady'] as bool?,
      vehicleStarted: json['vehicleStarted'] as bool?,
      dropped: json['dropped'] as bool?,
      foundItOkayAtDroppingPoint: json['foundItOkayAtDroppingPoint'] as bool?,
      received: json['received'] as bool?,
      weightCapacity: (json['weightCapacity'] as num?)?.toDouble(),
    );

Map<String, dynamic> _$TransportOrderLoadingModelsToJson(
        TransportOrderLoadingModels instance) =>
    <String, dynamic>{
      'id': instance.id,
      'countryCode': instance.countryCode,
      'countryName': instance.countryName,
      'transportOrderId': instance.transportOrderId,
      'transportOrderNo': instance.transportOrderNo,
      'transportOrderDate': instance.transportOrderDate,
      'vehicleId': instance.vehicleId,
      'vehicleType': instance.vehicleType,
      'capacity': instance.capacity,
      'brand': instance.brand,
      'model': instance.model,
      'registrationNo': instance.registrationNo,
      'driverFullname': instance.driverFullname,
      'driverUsername': instance.driverUsername,
      'driverEmail': instance.driverEmail,
      'driverMobile': instance.driverMobile,
      'startSerialNo': instance.startSerialNo,
      'finishSerialNo': instance.finishSerialNo,
      'lineNo': instance.lineNo,
      'productId': instance.productId,
      'productCode': instance.productCode,
      'productName': instance.productName,
      'productDescription': instance.productDescription,
      'productBrand': instance.productBrand,
      'baseUom': instance.baseUom,
      'baseUomQuantity': instance.baseUomQuantity,
      'productColor': instance.productColor,
      'productSize': instance.productSize,
      'productSerial': instance.productSerial,
      'weightKg': instance.weightKg,
      'loadedQuantity': instance.loadedQuantity,
      'droppedAt': instance.droppedAt,
      'droppedQuantity': instance.droppedQuantity,
      'dropLocId': instance.dropLocId,
      'dropLocName': instance.dropLocName,
      'dropLatitude': instance.dropLatitude,
      'dropLongitude': instance.dropLongitude,
      'distanceKm': instance.distanceKm,
      'receiverReadyAt': instance.receiverReadyAt,
      'receiverRemarkWhileReady': instance.receiverRemarkWhileReady,
      'receivedAt': instance.receivedAt,
      'receivedQuantity': instance.receivedQuantity,
      'receiverRemarkWhileReceived': instance.receiverRemarkWhileReceived,
      'receiverFullname': instance.receiverFullname,
      'receiverUsername': instance.receiverUsername,
      'receiverEmail': instance.receiverEmail,
      'receiverMobile': instance.receiverMobile,
      'inspectorFoundQuantityAtDroppingPoint':
          instance.inspectorFoundQuantityAtDroppingPoint,
      'inspectorRemarkAtDroppingPoint': instance.inspectorRemarkAtDroppingPoint,
      'inspectorFullnameAtDroppingPoint':
          instance.inspectorFullnameAtDroppingPoint,
      'inspectorUsernameAtDroppingPoint':
          instance.inspectorUsernameAtDroppingPoint,
      'inspectorEmailAtDroppingPoint': instance.inspectorEmailAtDroppingPoint,
      'inspectorMobileAtDroppingPoint': instance.inspectorMobileAtDroppingPoint,
      'digest': instance.digest,
      'masterViewModel': instance.masterViewModel,
      'vehicleReady': instance.vehicleReady,
      'receiverReady': instance.receiverReady,
      'vehicleStarted': instance.vehicleStarted,
      'dropped': instance.dropped,
      'foundItOkayAtDroppingPoint': instance.foundItOkayAtDroppingPoint,
      'received': instance.received,
      'weightCapacity': instance.weightCapacity,
    };

UnloadModel _$UnloadModelFromJson(Map<String, dynamic> json) => UnloadModel(
      id: json['id'] as String?,
      countryCode: json['countryCode'] as String?,
      countryName: json['countryName'] as String?,
      transportOrderId: json['transportOrderId'] as String?,
      transportOrderNo: json['transportOrderNo'] as String?,
      transportOrderDate: json['transportOrderDate'] as String?,
      vehicleId: json['vehicleId'] as String?,
      vehicleType: json['vehicleType'] as String?,
      capacity: json['capacity'] as String?,
      brand: json['brand'] as String?,
      model: json['model'] as String?,
      registrationNo: json['registrationNo'] as String?,
      driverFullname: json['driverFullname'] as String?,
      driverUsername: json['driverUsername'] as String?,
      driverEmail: json['driverEmail'] as String?,
      driverMobile: json['driverMobile'] as String?,
      startSerialNo: json['startSerialNo'] as String?,
      finishSerialNo: json['finishSerialNo'] as String?,
      lineNo: json['lineNo'] as num?,
      productId: json['productId'] as String?,
      productCode: json['productCode'] as String?,
      productName: json['productName'] as String?,
      productDescription: json['productDescription'] as String?,
      productBrand: json['productBrand'] as String?,
      baseUom: json['baseUom'] as String?,
      baseUomQuantity: json['baseUomQuantity'] as num?,
      productColor: json['productColor'] as String?,
      productSize: json['productSize'] as String?,
      productSerial: json['productSerial'] as String?,
      weightKg: json['weightKg'] as num?,
      loadedQuantity: json['loadedQuantity'] as num?,
      droppedAt: json['droppedAt'] as String?,
      droppedQuantity: (json['droppedQuantity'] as num?)?.toDouble(),
      dropLocId: json['dropLocId'] as String?,
      dropLocName: json['dropLocName'] as String?,
      dropLatitude: json['dropLatitude'] as num?,
      dropLongitude: json['dropLongitude'] as num?,
      distanceKm: json['distanceKm'] as num?,
      receiverReadyAt: json['receiverReadyAt'] as String?,
      receiverRemarkWhileReady: json['receiverRemarkWhileReady'] as String?,
      receivedAt: json['receivedAt'] as String?,
      receivedQuantity: json['receivedQuantity'] as num?,
      receiverRemarkWhileReceived:
          json['receiverRemarkWhileReceived'] as String?,
      receiverFullname: json['receiverFullname'] as String?,
      receiverUsername: json['receiverUsername'] as String?,
      receiverEmail: json['receiverEmail'] as String?,
      receiverMobile: json['receiverMobile'] as String?,
      inspectorFoundQuantityAtDroppingPoint:
          json['inspectorFoundQuantityAtDroppingPoint'] as num?,
      inspectorRemarkAtDroppingPoint:
          json['inspectorRemarkAtDroppingPoint'] as String?,
      inspectorFullnameAtDroppingPoint:
          json['inspectorFullnameAtDroppingPoint'] as String?,
      inspectorUsernameAtDroppingPoint:
          json['inspectorUsernameAtDroppingPoint'] as String?,
      inspectorEmailAtDroppingPoint:
          json['inspectorEmailAtDroppingPoint'] as String?,
      inspectorMobileAtDroppingPoint:
          json['inspectorMobileAtDroppingPoint'] as String?,
      vehicleReady: json['vehicleReady'] as bool?,
      receiverReady: json['receiverReady'] as bool?,
      vehicleStarted: json['vehicleStarted'] as bool?,
      dropped: json['dropped'] as bool?,
      foundItOkayAtDroppingPoint: json['foundItOkayAtDroppingPoint'] as bool?,
      received: json['received'] as bool?,
      weightCapacity: (json['weightCapacity'] as num?)?.toDouble(),
    );

Map<String, dynamic> _$UnloadModelToJson(UnloadModel instance) =>
    <String, dynamic>{
      'id': instance.id,
      'countryCode': instance.countryCode,
      'countryName': instance.countryName,
      'transportOrderId': instance.transportOrderId,
      'transportOrderNo': instance.transportOrderNo,
      'transportOrderDate': instance.transportOrderDate,
      'vehicleId': instance.vehicleId,
      'vehicleType': instance.vehicleType,
      'capacity': instance.capacity,
      'brand': instance.brand,
      'model': instance.model,
      'registrationNo': instance.registrationNo,
      'driverFullname': instance.driverFullname,
      'driverUsername': instance.driverUsername,
      'driverEmail': instance.driverEmail,
      'driverMobile': instance.driverMobile,
      'startSerialNo': instance.startSerialNo,
      'finishSerialNo': instance.finishSerialNo,
      'lineNo': instance.lineNo,
      'productId': instance.productId,
      'productCode': instance.productCode,
      'productName': instance.productName,
      'productDescription': instance.productDescription,
      'productBrand': instance.productBrand,
      'baseUom': instance.baseUom,
      'baseUomQuantity': instance.baseUomQuantity,
      'productColor': instance.productColor,
      'productSize': instance.productSize,
      'productSerial': instance.productSerial,
      'weightKg': instance.weightKg,
      'loadedQuantity': instance.loadedQuantity,
      'droppedAt': instance.droppedAt,
      'droppedQuantity': instance.droppedQuantity,
      'dropLocId': instance.dropLocId,
      'dropLocName': instance.dropLocName,
      'dropLatitude': instance.dropLatitude,
      'dropLongitude': instance.dropLongitude,
      'distanceKm': instance.distanceKm,
      'receiverReadyAt': instance.receiverReadyAt,
      'receiverRemarkWhileReady': instance.receiverRemarkWhileReady,
      'receivedAt': instance.receivedAt,
      'receivedQuantity': instance.receivedQuantity,
      'receiverRemarkWhileReceived': instance.receiverRemarkWhileReceived,
      'receiverFullname': instance.receiverFullname,
      'receiverUsername': instance.receiverUsername,
      'receiverEmail': instance.receiverEmail,
      'receiverMobile': instance.receiverMobile,
      'inspectorFoundQuantityAtDroppingPoint':
          instance.inspectorFoundQuantityAtDroppingPoint,
      'inspectorRemarkAtDroppingPoint': instance.inspectorRemarkAtDroppingPoint,
      'inspectorFullnameAtDroppingPoint':
          instance.inspectorFullnameAtDroppingPoint,
      'inspectorUsernameAtDroppingPoint':
          instance.inspectorUsernameAtDroppingPoint,
      'inspectorEmailAtDroppingPoint': instance.inspectorEmailAtDroppingPoint,
      'inspectorMobileAtDroppingPoint': instance.inspectorMobileAtDroppingPoint,
      'vehicleReady': instance.vehicleReady,
      'receiverReady': instance.receiverReady,
      'vehicleStarted': instance.vehicleStarted,
      'dropped': instance.dropped,
      'foundItOkayAtDroppingPoint': instance.foundItOkayAtDroppingPoint,
      'received': instance.received,
      'weightCapacity': instance.weightCapacity,
    };
