// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'site_location.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

SiteLocation _$SiteLocationFromJson(Map<String, dynamic> json) => SiteLocation(
      header: json['header'] == null
          ? null
          : Header.fromJson(json['header'] as Map<String, dynamic>),
      pillarTypes: json['pillarTypes'] == null
          ? null
          : PillarTypes.fromJson(json['pillarTypes'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$SiteLocationToJson(SiteLocation instance) =>
    <String, dynamic>{
      'pillarTypes': instance.pillarTypes,
      'header': instance.header,
    };

Header _$HeaderFromJson(Map<String, dynamic> json) => Header(
      level2name: json['level2name'] as String?,
      level3name: json['level3name'] as String?,
      lavel1Name: json['lavel1Name'] as String?,
      countryName: json['countryName'] as String?,
      level4name: json['level4name'] as String?,
      latitude: (json['latitude'] as num?)?.toDouble(),
      longitude: (json['longitude'] as num?)?.toDouble(),
    );

Map<String, dynamic> _$HeaderToJson(Header instance) => <String, dynamic>{
      'level2name': instance.level2name,
      'level3name': instance.level3name,
      'lavel1Name': instance.lavel1Name,
      'countryName': instance.countryName,
      'level4name': instance.level4name,
      'latitude': instance.latitude,
      'longitude': instance.longitude,
    };

PillarTypes _$PillarTypesFromJson(Map<String, dynamic> json) => PillarTypes(
      newPole: (json['newPole'] as List<dynamic>?)
          ?.map((e) => NewPole.fromJson(e as Map<String, dynamic>))
          .toList(),
      onBuilding: (json['onBuilding'] as List<dynamic>?)
          ?.map((e) => OnBuilding.fromJson(e as Map<String, dynamic>))
          .toList(),
      electricityPole: (json['electricityPole'] as List<dynamic>?)
          ?.map((e) => ElectricityPole.fromJson(e as Map<String, dynamic>))
          .toList(),
      lightPost: (json['lightPost'] as List<dynamic>?)
          ?.map((e) => LightPost.fromJson(e as Map<String, dynamic>))
          .toList(),
      noPole: (json['noPole'] as List<dynamic>?)
          ?.map((e) => NoPole.fromJson(e as Map<String, dynamic>))
          .toList(),
    );

Map<String, dynamic> _$PillarTypesToJson(PillarTypes instance) =>
    <String, dynamic>{
      'newPole': instance.newPole,
      'onBuilding': instance.onBuilding,
      'electricityPole': instance.electricityPole,
      'lightPost': instance.lightPost,
      'noPole': instance.noPole,
    };

NewPole _$NewPoleFromJson(Map<String, dynamic> json) => NewPole(
      id: json['id'] as String?,
      latitude: (json['latitude'] as num?)?.toDouble(),
      longitude: (json['longitude'] as num?)?.toDouble(),
      altitudeMtr: json['altitudeMtr'] as num?,
      pillarType: json['pillarType'] as String?,
      agencyId: json['agencyId'] as String?,
      agencyCode: json['agencyCode'] as String?,
      agencyName: json['agencyName'] as String?,
      projectId: json['projectId'] as String?,
      projectCode: json['projectCode'] as String?,
      projectName: json['projectName'] as String?,
      areaType: json['areaType'] as String?,
      areaLevel: json['areaLevel'] as int?,
      countryCode: json['countryCode'] as String?,
      countryName: json['countryName'] as String?,
      geoLevel1Id: json['geoLevel1Id'] as String?,
      geoLevel1Code: json['geoLevel1Code'] as String?,
      geoLevel1Name: json['geoLevel1Name'] as String?,
      geoLevel2id: json['geoLevel2id'] as String?,
      geoLevel2Code: json['geoLevel2Code'] as String?,
      geoLevel2Name: json['geoLevel2Name'] as String?,
      geoLevel3Id: json['geoLevel3Id'] as String?,
      geoLevel3Code: json['geoLevel3Code'] as String?,
      geoLevel3Name: json['geoLevel3Name'] as String?,
      geoLevel4Id: json['geoLevel4Id'] as String?,
      geoLevel4Code: json['geoLevel4Code'] as String?,
      geoLevel4Name: json['geoLevel4Name'] as String?,
      geoLevel5Id: json['geoLevel5Id'] as String?,
      geoLevel5Code: json['geoLevel5Code'] as String?,
      geoLevel5Name: json['geoLevel5Name'] as String?,
      levelType: json['levelType'] as String?,
      levelFullcode: json['levelFullcode'] as String?,
      siteType: json['siteType'] as String?,
      siteCode: json['siteCode'] as String?,
      siteName: json['siteName'] as String?,
      workStatus: json['workStatus'] as String?,
      workStartedOn: json['workStartedOn'] as String?,
      workCompleted: json['workCompleted'] as String?,
      siteAddress: json['siteAddress'] as String?,
      priority: json['priority'] as int?,
      priorityName: json['priorityName'] as String?,
      potentialBeneficiaryCount: json['potentialBeneficiaryCount'] as num?,
      functionType: json['functionType'] as String?,
      placeType: json['placeType'] as String?,
      powerSource: json['powerSource'] as String?,
      distanceFromBorderKm: json['distanceFromBorderKm'] as num?,
      distanceFromAirportKm: json['distanceFromAirportKm'] as num?,
      custodianUsername: json['custodianUsername'] as String?,
      custodianFullname: json['custodianFullname'] as String?,
      custodianMobile: json['custodianMobile'] as String?,
      custodianEmail: json['custodianEmail'] as String?,
      custodianNid: json['custodianNid'] as String?,
      custodianMonthlyRent: json['custodianMonthlyRent'] as num?,
      custodianAddress: json['custodianAddress'] as String?,
      verificationResult: json['verificationResult'] as String?,
      verifiedOn: json['verifiedOn'] as String?,
      verifiedAt: json['verifiedAt'] as String?,
      verifierUsername: json['verifierUsername'] as String?,
      verifierFullname: json['verifierFullname'] as String?,
      verifierMobile: json['verifierMobile'] as String?,
      verifierEmail: json['verifierEmail'] as String?,
      verifierComments: json['verifierComments'] as String?,
      relocRequestStatus: json['relocRequestStatus'] as String?,
      relocRequestedOn: json['relocRequestedOn'] as String?,
      relocApprovedOn: json['relocApprovedOn'] as String?,
      oldLatitude: json['oldLatitude'] as num?,
      oldLongitude: json['oldLongitude'] as num?,
      oldAltitudeMtr: json['oldAltitudeMtr'] as num?,
      relocReason: json['relocReason'] as String?,
      relocApproverUsername: json['relocApproverUsername'] as String?,
      relocApproverFullname: json['relocApproverFullname'] as String?,
      relocApproverMobile: json['relocApproverMobile'] as String?,
      relocApproverEmail: json['relocApproverEmail'] as String?,
      createMethod: json['createMethod'] as String?,
      createdOn: json['createdOn'] as String?,
      createdAt: json['createdAt'] as String?,
      creatorUsername: json['creatorUsername'] as String?,
      creatorFullname: json['creatorFullname'] as String?,
      creatorMobile: json['creatorMobile'] as String?,
      creatorEmail: json['creatorEmail'] as String?,
      creatorComments: json['creatorComments'] as String?,
      digest: json['digest'] as String?,
      productId: json['productId'] as String?,
      productCode: json['productCode'] as String?,
      productName: json['productName'] as String?,
      productDescription: json['productDescription'] as String?,
      productBrand: json['productBrand'] as String?,
      demandUom: json['demandUom'] as String?,
      demandUomQuantity: json['demandUomQuantity'] as num?,
      productFullcode: json['productFullcode'] as String?,
      borderSite: json['borderSite'] as bool?,
      airportSite: json['airportSite'] as bool?,
      tallSite: json['tallSite'] as bool?,
      restrictedArea: json['restrictedArea'] as bool?,
    );

Map<String, dynamic> _$NewPoleToJson(NewPole instance) => <String, dynamic>{
      'id': instance.id,
      'latitude': instance.latitude,
      'longitude': instance.longitude,
      'altitudeMtr': instance.altitudeMtr,
      'pillarType': instance.pillarType,
      'agencyId': instance.agencyId,
      'agencyCode': instance.agencyCode,
      'agencyName': instance.agencyName,
      'projectId': instance.projectId,
      'projectCode': instance.projectCode,
      'projectName': instance.projectName,
      'areaType': instance.areaType,
      'areaLevel': instance.areaLevel,
      'countryCode': instance.countryCode,
      'countryName': instance.countryName,
      'geoLevel1Id': instance.geoLevel1Id,
      'geoLevel1Code': instance.geoLevel1Code,
      'geoLevel1Name': instance.geoLevel1Name,
      'geoLevel2id': instance.geoLevel2id,
      'geoLevel2Code': instance.geoLevel2Code,
      'geoLevel2Name': instance.geoLevel2Name,
      'geoLevel3Id': instance.geoLevel3Id,
      'geoLevel3Code': instance.geoLevel3Code,
      'geoLevel3Name': instance.geoLevel3Name,
      'geoLevel4Id': instance.geoLevel4Id,
      'geoLevel4Code': instance.geoLevel4Code,
      'geoLevel4Name': instance.geoLevel4Name,
      'geoLevel5Id': instance.geoLevel5Id,
      'geoLevel5Code': instance.geoLevel5Code,
      'geoLevel5Name': instance.geoLevel5Name,
      'levelType': instance.levelType,
      'levelFullcode': instance.levelFullcode,
      'siteType': instance.siteType,
      'siteCode': instance.siteCode,
      'siteName': instance.siteName,
      'workStatus': instance.workStatus,
      'workStartedOn': instance.workStartedOn,
      'workCompleted': instance.workCompleted,
      'siteAddress': instance.siteAddress,
      'priority': instance.priority,
      'priorityName': instance.priorityName,
      'potentialBeneficiaryCount': instance.potentialBeneficiaryCount,
      'functionType': instance.functionType,
      'placeType': instance.placeType,
      'powerSource': instance.powerSource,
      'distanceFromBorderKm': instance.distanceFromBorderKm,
      'distanceFromAirportKm': instance.distanceFromAirportKm,
      'custodianUsername': instance.custodianUsername,
      'custodianFullname': instance.custodianFullname,
      'custodianMobile': instance.custodianMobile,
      'custodianEmail': instance.custodianEmail,
      'custodianNid': instance.custodianNid,
      'custodianMonthlyRent': instance.custodianMonthlyRent,
      'custodianAddress': instance.custodianAddress,
      'verificationResult': instance.verificationResult,
      'verifiedOn': instance.verifiedOn,
      'verifiedAt': instance.verifiedAt,
      'verifierUsername': instance.verifierUsername,
      'verifierFullname': instance.verifierFullname,
      'verifierMobile': instance.verifierMobile,
      'verifierEmail': instance.verifierEmail,
      'verifierComments': instance.verifierComments,
      'relocRequestStatus': instance.relocRequestStatus,
      'relocRequestedOn': instance.relocRequestedOn,
      'relocApprovedOn': instance.relocApprovedOn,
      'oldLatitude': instance.oldLatitude,
      'oldLongitude': instance.oldLongitude,
      'oldAltitudeMtr': instance.oldAltitudeMtr,
      'relocReason': instance.relocReason,
      'relocApproverUsername': instance.relocApproverUsername,
      'relocApproverFullname': instance.relocApproverFullname,
      'relocApproverMobile': instance.relocApproverMobile,
      'relocApproverEmail': instance.relocApproverEmail,
      'createMethod': instance.createMethod,
      'createdOn': instance.createdOn,
      'createdAt': instance.createdAt,
      'creatorUsername': instance.creatorUsername,
      'creatorFullname': instance.creatorFullname,
      'creatorMobile': instance.creatorMobile,
      'creatorEmail': instance.creatorEmail,
      'creatorComments': instance.creatorComments,
      'digest': instance.digest,
      'productId': instance.productId,
      'productCode': instance.productCode,
      'productName': instance.productName,
      'productDescription': instance.productDescription,
      'productBrand': instance.productBrand,
      'demandUom': instance.demandUom,
      'demandUomQuantity': instance.demandUomQuantity,
      'productFullcode': instance.productFullcode,
      'borderSite': instance.borderSite,
      'airportSite': instance.airportSite,
      'tallSite': instance.tallSite,
      'restrictedArea': instance.restrictedArea,
    };

ElectricityPole _$ElectricityPoleFromJson(Map<String, dynamic> json) =>
    ElectricityPole(
      id: json['id'] as String?,
      latitude: (json['latitude'] as num?)?.toDouble(),
      longitude: (json['longitude'] as num?)?.toDouble(),
      altitudeMtr: json['altitudeMtr'] as num?,
      pillarType: json['pillarType'] as String?,
      agencyId: json['agencyId'] as String?,
      agencyCode: json['agencyCode'] as String?,
      agencyName: json['agencyName'] as String?,
      projectId: json['projectId'] as String?,
      projectCode: json['projectCode'] as String?,
      projectName: json['projectName'] as String?,
      areaType: json['areaType'] as String?,
      areaLevel: json['areaLevel'] as int?,
      countryCode: json['countryCode'] as String?,
      countryName: json['countryName'] as String?,
      geoLevel1Id: json['geoLevel1Id'] as String?,
      geoLevel1Code: json['geoLevel1Code'] as String?,
      geoLevel1Name: json['geoLevel1Name'] as String?,
      geoLevel2id: json['geoLevel2id'] as String?,
      geoLevel2Code: json['geoLevel2Code'] as String?,
      geoLevel2Name: json['geoLevel2Name'] as String?,
      geoLevel3Id: json['geoLevel3Id'] as String?,
      geoLevel3Code: json['geoLevel3Code'] as String?,
      geoLevel3Name: json['geoLevel3Name'] as String?,
      geoLevel4Id: json['geoLevel4Id'] as String?,
      geoLevel4Code: json['geoLevel4Code'] as String?,
      geoLevel4Name: json['geoLevel4Name'] as String?,
      geoLevel5Id: json['geoLevel5Id'] as String?,
      geoLevel5Code: json['geoLevel5Code'] as String?,
      geoLevel5Name: json['geoLevel5Name'] as String?,
      levelType: json['levelType'] as String?,
      levelFullcode: json['levelFullcode'] as String?,
      siteType: json['siteType'] as String?,
      siteCode: json['siteCode'] as String?,
      siteName: json['siteName'] as String?,
      workStatus: json['workStatus'] as String?,
      workStartedOn: json['workStartedOn'] as String?,
      workCompleted: json['workCompleted'] as String?,
      siteAddress: json['siteAddress'] as String?,
      priority: json['priority'] as int?,
      priorityName: json['priorityName'] as String?,
      potentialBeneficiaryCount: json['potentialBeneficiaryCount'] as num?,
      functionType: json['functionType'] as String?,
      placeType: json['placeType'] as String?,
      powerSource: json['powerSource'] as String?,
      distanceFromBorderKm: json['distanceFromBorderKm'] as num?,
      distanceFromAirportKm: json['distanceFromAirportKm'] as num?,
      custodianUsername: json['custodianUsername'] as String?,
      custodianFullname: json['custodianFullname'] as String?,
      custodianMobile: json['custodianMobile'] as String?,
      custodianEmail: json['custodianEmail'] as String?,
      custodianNid: json['custodianNid'] as String?,
      custodianMonthlyRent: json['custodianMonthlyRent'] as num?,
      custodianAddress: json['custodianAddress'] as String?,
      verificationResult: json['verificationResult'] as String?,
      verifiedOn: json['verifiedOn'] as String?,
      verifiedAt: json['verifiedAt'] as String?,
      verifierUsername: json['verifierUsername'] as String?,
      verifierFullname: json['verifierFullname'] as String?,
      verifierMobile: json['verifierMobile'] as String?,
      verifierEmail: json['verifierEmail'] as String?,
      verifierComments: json['verifierComments'] as String?,
      relocRequestStatus: json['relocRequestStatus'] as String?,
      relocRequestedOn: json['relocRequestedOn'] as String?,
      relocApprovedOn: json['relocApprovedOn'] as String?,
      oldLatitude: json['oldLatitude'] as num?,
      oldLongitude: json['oldLongitude'] as num?,
      oldAltitudeMtr: json['oldAltitudeMtr'] as num?,
      relocReason: json['relocReason'] as String?,
      relocApproverUsername: json['relocApproverUsername'] as String?,
      relocApproverFullname: json['relocApproverFullname'] as String?,
      relocApproverMobile: json['relocApproverMobile'] as String?,
      relocApproverEmail: json['relocApproverEmail'] as String?,
      createMethod: json['createMethod'] as String?,
      createdOn: json['createdOn'] as String?,
      createdAt: json['createdAt'] as String?,
      creatorUsername: json['creatorUsername'] as String?,
      creatorFullname: json['creatorFullname'] as String?,
      creatorMobile: json['creatorMobile'] as String?,
      creatorEmail: json['creatorEmail'] as String?,
      creatorComments: json['creatorComments'] as String?,
      digest: json['digest'] as String?,
      productId: json['productId'] as String?,
      productCode: json['productCode'] as String?,
      productName: json['productName'] as String?,
      productDescription: json['productDescription'] as String?,
      productBrand: json['productBrand'] as String?,
      demandUom: json['demandUom'] as String?,
      demandUomQuantity: json['demandUomQuantity'] as num?,
      productFullcode: json['productFullcode'] as String?,
      borderSite: json['borderSite'] as bool?,
      airportSite: json['airportSite'] as bool?,
      tallSite: json['tallSite'] as bool?,
      restrictedArea: json['restrictedArea'] as bool?,
    );

Map<String, dynamic> _$ElectricityPoleToJson(ElectricityPole instance) =>
    <String, dynamic>{
      'id': instance.id,
      'latitude': instance.latitude,
      'longitude': instance.longitude,
      'altitudeMtr': instance.altitudeMtr,
      'pillarType': instance.pillarType,
      'agencyId': instance.agencyId,
      'agencyCode': instance.agencyCode,
      'agencyName': instance.agencyName,
      'projectId': instance.projectId,
      'projectCode': instance.projectCode,
      'projectName': instance.projectName,
      'areaType': instance.areaType,
      'areaLevel': instance.areaLevel,
      'countryCode': instance.countryCode,
      'countryName': instance.countryName,
      'geoLevel1Id': instance.geoLevel1Id,
      'geoLevel1Code': instance.geoLevel1Code,
      'geoLevel1Name': instance.geoLevel1Name,
      'geoLevel2id': instance.geoLevel2id,
      'geoLevel2Code': instance.geoLevel2Code,
      'geoLevel2Name': instance.geoLevel2Name,
      'geoLevel3Id': instance.geoLevel3Id,
      'geoLevel3Code': instance.geoLevel3Code,
      'geoLevel3Name': instance.geoLevel3Name,
      'geoLevel4Id': instance.geoLevel4Id,
      'geoLevel4Code': instance.geoLevel4Code,
      'geoLevel4Name': instance.geoLevel4Name,
      'geoLevel5Id': instance.geoLevel5Id,
      'geoLevel5Code': instance.geoLevel5Code,
      'geoLevel5Name': instance.geoLevel5Name,
      'levelType': instance.levelType,
      'levelFullcode': instance.levelFullcode,
      'siteType': instance.siteType,
      'siteCode': instance.siteCode,
      'siteName': instance.siteName,
      'workStatus': instance.workStatus,
      'workStartedOn': instance.workStartedOn,
      'workCompleted': instance.workCompleted,
      'siteAddress': instance.siteAddress,
      'priority': instance.priority,
      'priorityName': instance.priorityName,
      'potentialBeneficiaryCount': instance.potentialBeneficiaryCount,
      'functionType': instance.functionType,
      'placeType': instance.placeType,
      'powerSource': instance.powerSource,
      'distanceFromBorderKm': instance.distanceFromBorderKm,
      'distanceFromAirportKm': instance.distanceFromAirportKm,
      'custodianUsername': instance.custodianUsername,
      'custodianFullname': instance.custodianFullname,
      'custodianMobile': instance.custodianMobile,
      'custodianEmail': instance.custodianEmail,
      'custodianNid': instance.custodianNid,
      'custodianMonthlyRent': instance.custodianMonthlyRent,
      'custodianAddress': instance.custodianAddress,
      'verificationResult': instance.verificationResult,
      'verifiedOn': instance.verifiedOn,
      'verifiedAt': instance.verifiedAt,
      'verifierUsername': instance.verifierUsername,
      'verifierFullname': instance.verifierFullname,
      'verifierMobile': instance.verifierMobile,
      'verifierEmail': instance.verifierEmail,
      'verifierComments': instance.verifierComments,
      'relocRequestStatus': instance.relocRequestStatus,
      'relocRequestedOn': instance.relocRequestedOn,
      'relocApprovedOn': instance.relocApprovedOn,
      'oldLatitude': instance.oldLatitude,
      'oldLongitude': instance.oldLongitude,
      'oldAltitudeMtr': instance.oldAltitudeMtr,
      'relocReason': instance.relocReason,
      'relocApproverUsername': instance.relocApproverUsername,
      'relocApproverFullname': instance.relocApproverFullname,
      'relocApproverMobile': instance.relocApproverMobile,
      'relocApproverEmail': instance.relocApproverEmail,
      'createMethod': instance.createMethod,
      'createdOn': instance.createdOn,
      'createdAt': instance.createdAt,
      'creatorUsername': instance.creatorUsername,
      'creatorFullname': instance.creatorFullname,
      'creatorMobile': instance.creatorMobile,
      'creatorEmail': instance.creatorEmail,
      'creatorComments': instance.creatorComments,
      'digest': instance.digest,
      'productId': instance.productId,
      'productCode': instance.productCode,
      'productName': instance.productName,
      'productDescription': instance.productDescription,
      'productBrand': instance.productBrand,
      'demandUom': instance.demandUom,
      'demandUomQuantity': instance.demandUomQuantity,
      'productFullcode': instance.productFullcode,
      'borderSite': instance.borderSite,
      'airportSite': instance.airportSite,
      'tallSite': instance.tallSite,
      'restrictedArea': instance.restrictedArea,
    };

OnBuilding _$OnBuildingFromJson(Map<String, dynamic> json) => OnBuilding(
      id: json['id'] as String?,
      latitude: (json['latitude'] as num?)?.toDouble(),
      longitude: (json['longitude'] as num?)?.toDouble(),
      altitudeMtr: json['altitudeMtr'] as num?,
      pillarType: json['pillarType'] as String?,
      agencyId: json['agencyId'] as String?,
      agencyCode: json['agencyCode'] as String?,
      agencyName: json['agencyName'] as String?,
      projectId: json['projectId'] as String?,
      projectCode: json['projectCode'] as String?,
      projectName: json['projectName'] as String?,
      areaType: json['areaType'] as String?,
      areaLevel: json['areaLevel'] as int?,
      countryCode: json['countryCode'] as String?,
      countryName: json['countryName'] as String?,
      geoLevel1Id: json['geoLevel1Id'] as String?,
      geoLevel1Code: json['geoLevel1Code'] as String?,
      geoLevel1Name: json['geoLevel1Name'] as String?,
      geoLevel2id: json['geoLevel2id'] as String?,
      geoLevel2Code: json['geoLevel2Code'] as String?,
      geoLevel2Name: json['geoLevel2Name'] as String?,
      geoLevel3Id: json['geoLevel3Id'] as String?,
      geoLevel3Code: json['geoLevel3Code'] as String?,
      geoLevel3Name: json['geoLevel3Name'] as String?,
      geoLevel4Id: json['geoLevel4Id'] as String?,
      geoLevel4Code: json['geoLevel4Code'] as String?,
      geoLevel4Name: json['geoLevel4Name'] as String?,
      geoLevel5Id: json['geoLevel5Id'] as String?,
      geoLevel5Code: json['geoLevel5Code'] as String?,
      geoLevel5Name: json['geoLevel5Name'] as String?,
      levelType: json['levelType'] as String?,
      levelFullcode: json['levelFullcode'] as String?,
      siteType: json['siteType'] as String?,
      siteCode: json['siteCode'] as String?,
      siteName: json['siteName'] as String?,
      workStatus: json['workStatus'] as String?,
      workStartedOn: json['workStartedOn'] as String?,
      workCompleted: json['workCompleted'] as String?,
      siteAddress: json['siteAddress'] as String?,
      priority: json['priority'] as int?,
      priorityName: json['priorityName'] as String?,
      potentialBeneficiaryCount: json['potentialBeneficiaryCount'] as num?,
      functionType: json['functionType'] as String?,
      placeType: json['placeType'] as String?,
      powerSource: json['powerSource'] as String?,
      distanceFromBorderKm: json['distanceFromBorderKm'] as num?,
      distanceFromAirportKm: json['distanceFromAirportKm'] as num?,
      custodianUsername: json['custodianUsername'] as String?,
      custodianFullname: json['custodianFullname'] as String?,
      custodianMobile: json['custodianMobile'] as String?,
      custodianEmail: json['custodianEmail'] as String?,
      custodianNid: json['custodianNid'] as String?,
      custodianMonthlyRent: json['custodianMonthlyRent'] as num?,
      custodianAddress: json['custodianAddress'] as String?,
      verificationResult: json['verificationResult'] as String?,
      verifiedOn: json['verifiedOn'] as String?,
      verifiedAt: json['verifiedAt'] as String?,
      verifierUsername: json['verifierUsername'] as String?,
      verifierFullname: json['verifierFullname'] as String?,
      verifierMobile: json['verifierMobile'] as String?,
      verifierEmail: json['verifierEmail'] as String?,
      verifierComments: json['verifierComments'] as String?,
      relocRequestStatus: json['relocRequestStatus'] as String?,
      relocRequestedOn: json['relocRequestedOn'] as String?,
      relocApprovedOn: json['relocApprovedOn'] as String?,
      oldLatitude: json['oldLatitude'] as num?,
      oldLongitude: json['oldLongitude'] as num?,
      oldAltitudeMtr: json['oldAltitudeMtr'] as num?,
      relocReason: json['relocReason'] as String?,
      relocApproverUsername: json['relocApproverUsername'] as String?,
      relocApproverFullname: json['relocApproverFullname'] as String?,
      relocApproverMobile: json['relocApproverMobile'] as String?,
      relocApproverEmail: json['relocApproverEmail'] as String?,
      createMethod: json['createMethod'] as String?,
      createdOn: json['createdOn'] as String?,
      createdAt: json['createdAt'] as String?,
      creatorUsername: json['creatorUsername'] as String?,
      creatorFullname: json['creatorFullname'] as String?,
      creatorMobile: json['creatorMobile'] as String?,
      creatorEmail: json['creatorEmail'] as String?,
      creatorComments: json['creatorComments'] as String?,
      digest: json['digest'] as String?,
      productId: json['productId'] as String?,
      productCode: json['productCode'] as String?,
      productName: json['productName'] as String?,
      productDescription: json['productDescription'] as String?,
      productBrand: json['productBrand'] as String?,
      demandUom: json['demandUom'] as String?,
      demandUomQuantity: json['demandUomQuantity'] as num?,
      productFullcode: json['productFullcode'] as String?,
      borderSite: json['borderSite'] as bool?,
      airportSite: json['airportSite'] as bool?,
      tallSite: json['tallSite'] as bool?,
      restrictedArea: json['restrictedArea'] as bool?,
    );

Map<String, dynamic> _$OnBuildingToJson(OnBuilding instance) =>
    <String, dynamic>{
      'id': instance.id,
      'latitude': instance.latitude,
      'longitude': instance.longitude,
      'altitudeMtr': instance.altitudeMtr,
      'pillarType': instance.pillarType,
      'agencyId': instance.agencyId,
      'agencyCode': instance.agencyCode,
      'agencyName': instance.agencyName,
      'projectId': instance.projectId,
      'projectCode': instance.projectCode,
      'projectName': instance.projectName,
      'areaType': instance.areaType,
      'areaLevel': instance.areaLevel,
      'countryCode': instance.countryCode,
      'countryName': instance.countryName,
      'geoLevel1Id': instance.geoLevel1Id,
      'geoLevel1Code': instance.geoLevel1Code,
      'geoLevel1Name': instance.geoLevel1Name,
      'geoLevel2id': instance.geoLevel2id,
      'geoLevel2Code': instance.geoLevel2Code,
      'geoLevel2Name': instance.geoLevel2Name,
      'geoLevel3Id': instance.geoLevel3Id,
      'geoLevel3Code': instance.geoLevel3Code,
      'geoLevel3Name': instance.geoLevel3Name,
      'geoLevel4Id': instance.geoLevel4Id,
      'geoLevel4Code': instance.geoLevel4Code,
      'geoLevel4Name': instance.geoLevel4Name,
      'geoLevel5Id': instance.geoLevel5Id,
      'geoLevel5Code': instance.geoLevel5Code,
      'geoLevel5Name': instance.geoLevel5Name,
      'levelType': instance.levelType,
      'levelFullcode': instance.levelFullcode,
      'siteType': instance.siteType,
      'siteCode': instance.siteCode,
      'siteName': instance.siteName,
      'workStatus': instance.workStatus,
      'workStartedOn': instance.workStartedOn,
      'workCompleted': instance.workCompleted,
      'siteAddress': instance.siteAddress,
      'priority': instance.priority,
      'priorityName': instance.priorityName,
      'potentialBeneficiaryCount': instance.potentialBeneficiaryCount,
      'functionType': instance.functionType,
      'placeType': instance.placeType,
      'powerSource': instance.powerSource,
      'distanceFromBorderKm': instance.distanceFromBorderKm,
      'distanceFromAirportKm': instance.distanceFromAirportKm,
      'custodianUsername': instance.custodianUsername,
      'custodianFullname': instance.custodianFullname,
      'custodianMobile': instance.custodianMobile,
      'custodianEmail': instance.custodianEmail,
      'custodianNid': instance.custodianNid,
      'custodianMonthlyRent': instance.custodianMonthlyRent,
      'custodianAddress': instance.custodianAddress,
      'verificationResult': instance.verificationResult,
      'verifiedOn': instance.verifiedOn,
      'verifiedAt': instance.verifiedAt,
      'verifierUsername': instance.verifierUsername,
      'verifierFullname': instance.verifierFullname,
      'verifierMobile': instance.verifierMobile,
      'verifierEmail': instance.verifierEmail,
      'verifierComments': instance.verifierComments,
      'relocRequestStatus': instance.relocRequestStatus,
      'relocRequestedOn': instance.relocRequestedOn,
      'relocApprovedOn': instance.relocApprovedOn,
      'oldLatitude': instance.oldLatitude,
      'oldLongitude': instance.oldLongitude,
      'oldAltitudeMtr': instance.oldAltitudeMtr,
      'relocReason': instance.relocReason,
      'relocApproverUsername': instance.relocApproverUsername,
      'relocApproverFullname': instance.relocApproverFullname,
      'relocApproverMobile': instance.relocApproverMobile,
      'relocApproverEmail': instance.relocApproverEmail,
      'createMethod': instance.createMethod,
      'createdOn': instance.createdOn,
      'createdAt': instance.createdAt,
      'creatorUsername': instance.creatorUsername,
      'creatorFullname': instance.creatorFullname,
      'creatorMobile': instance.creatorMobile,
      'creatorEmail': instance.creatorEmail,
      'creatorComments': instance.creatorComments,
      'digest': instance.digest,
      'productId': instance.productId,
      'productCode': instance.productCode,
      'productName': instance.productName,
      'productDescription': instance.productDescription,
      'productBrand': instance.productBrand,
      'demandUom': instance.demandUom,
      'demandUomQuantity': instance.demandUomQuantity,
      'productFullcode': instance.productFullcode,
      'borderSite': instance.borderSite,
      'airportSite': instance.airportSite,
      'tallSite': instance.tallSite,
      'restrictedArea': instance.restrictedArea,
    };

LightPost _$LightPostFromJson(Map<String, dynamic> json) => LightPost(
      id: json['id'] as String?,
      latitude: (json['latitude'] as num?)?.toDouble(),
      longitude: (json['longitude'] as num?)?.toDouble(),
      altitudeMtr: json['altitudeMtr'] as num?,
      pillarType: json['pillarType'] as String?,
      agencyId: json['agencyId'] as String?,
      agencyCode: json['agencyCode'] as String?,
      agencyName: json['agencyName'] as String?,
      projectId: json['projectId'] as String?,
      projectCode: json['projectCode'] as String?,
      projectName: json['projectName'] as String?,
      areaType: json['areaType'] as String?,
      areaLevel: json['areaLevel'] as int?,
      countryCode: json['countryCode'] as String?,
      countryName: json['countryName'] as String?,
      geoLevel1Id: json['geoLevel1Id'] as String?,
      geoLevel1Code: json['geoLevel1Code'] as String?,
      geoLevel1Name: json['geoLevel1Name'] as String?,
      geoLevel2id: json['geoLevel2id'] as String?,
      geoLevel2Code: json['geoLevel2Code'] as String?,
      geoLevel2Name: json['geoLevel2Name'] as String?,
      geoLevel3Id: json['geoLevel3Id'] as String?,
      geoLevel3Code: json['geoLevel3Code'] as String?,
      geoLevel3Name: json['geoLevel3Name'] as String?,
      geoLevel4Id: json['geoLevel4Id'] as String?,
      geoLevel4Code: json['geoLevel4Code'] as String?,
      geoLevel4Name: json['geoLevel4Name'] as String?,
      geoLevel5Id: json['geoLevel5Id'] as String?,
      geoLevel5Code: json['geoLevel5Code'] as String?,
      geoLevel5Name: json['geoLevel5Name'] as String?,
      levelType: json['levelType'] as String?,
      levelFullcode: json['levelFullcode'] as String?,
      siteType: json['siteType'] as String?,
      siteCode: json['siteCode'] as String?,
      siteName: json['siteName'] as String?,
      workStatus: json['workStatus'] as String?,
      workStartedOn: json['workStartedOn'] as String?,
      workCompleted: json['workCompleted'] as String?,
      siteAddress: json['siteAddress'] as String?,
      priority: json['priority'] as int?,
      priorityName: json['priorityName'] as String?,
      potentialBeneficiaryCount: json['potentialBeneficiaryCount'] as num?,
      functionType: json['functionType'] as String?,
      placeType: json['placeType'] as String?,
      powerSource: json['powerSource'] as String?,
      distanceFromBorderKm: json['distanceFromBorderKm'] as num?,
      distanceFromAirportKm: json['distanceFromAirportKm'] as num?,
      custodianUsername: json['custodianUsername'] as String?,
      custodianFullname: json['custodianFullname'] as String?,
      custodianMobile: json['custodianMobile'] as String?,
      custodianEmail: json['custodianEmail'] as String?,
      custodianNid: json['custodianNid'] as String?,
      custodianMonthlyRent: json['custodianMonthlyRent'] as num?,
      custodianAddress: json['custodianAddress'] as String?,
      verificationResult: json['verificationResult'] as String?,
      verifiedOn: json['verifiedOn'] as String?,
      verifiedAt: json['verifiedAt'] as String?,
      verifierUsername: json['verifierUsername'] as String?,
      verifierFullname: json['verifierFullname'] as String?,
      verifierMobile: json['verifierMobile'] as String?,
      verifierEmail: json['verifierEmail'] as String?,
      verifierComments: json['verifierComments'] as String?,
      relocRequestStatus: json['relocRequestStatus'] as String?,
      relocRequestedOn: json['relocRequestedOn'] as String?,
      relocApprovedOn: json['relocApprovedOn'] as String?,
      oldLatitude: json['oldLatitude'] as num?,
      oldLongitude: json['oldLongitude'] as num?,
      oldAltitudeMtr: json['oldAltitudeMtr'] as num?,
      relocReason: json['relocReason'] as String?,
      relocApproverUsername: json['relocApproverUsername'] as String?,
      relocApproverFullname: json['relocApproverFullname'] as String?,
      relocApproverMobile: json['relocApproverMobile'] as String?,
      relocApproverEmail: json['relocApproverEmail'] as String?,
      createMethod: json['createMethod'] as String?,
      createdOn: json['createdOn'] as String?,
      createdAt: json['createdAt'] as String?,
      creatorUsername: json['creatorUsername'] as String?,
      creatorFullname: json['creatorFullname'] as String?,
      creatorMobile: json['creatorMobile'] as String?,
      creatorEmail: json['creatorEmail'] as String?,
      creatorComments: json['creatorComments'] as String?,
      digest: json['digest'] as String?,
      productId: json['productId'] as String?,
      productCode: json['productCode'] as String?,
      productName: json['productName'] as String?,
      productDescription: json['productDescription'] as String?,
      productBrand: json['productBrand'] as String?,
      demandUom: json['demandUom'] as String?,
      demandUomQuantity: json['demandUomQuantity'] as num?,
      productFullcode: json['productFullcode'] as String?,
      borderSite: json['borderSite'] as bool?,
      airportSite: json['airportSite'] as bool?,
      tallSite: json['tallSite'] as bool?,
      restrictedArea: json['restrictedArea'] as bool?,
    );

Map<String, dynamic> _$LightPostToJson(LightPost instance) => <String, dynamic>{
      'id': instance.id,
      'latitude': instance.latitude,
      'longitude': instance.longitude,
      'altitudeMtr': instance.altitudeMtr,
      'pillarType': instance.pillarType,
      'agencyId': instance.agencyId,
      'agencyCode': instance.agencyCode,
      'agencyName': instance.agencyName,
      'projectId': instance.projectId,
      'projectCode': instance.projectCode,
      'projectName': instance.projectName,
      'areaType': instance.areaType,
      'areaLevel': instance.areaLevel,
      'countryCode': instance.countryCode,
      'countryName': instance.countryName,
      'geoLevel1Id': instance.geoLevel1Id,
      'geoLevel1Code': instance.geoLevel1Code,
      'geoLevel1Name': instance.geoLevel1Name,
      'geoLevel2id': instance.geoLevel2id,
      'geoLevel2Code': instance.geoLevel2Code,
      'geoLevel2Name': instance.geoLevel2Name,
      'geoLevel3Id': instance.geoLevel3Id,
      'geoLevel3Code': instance.geoLevel3Code,
      'geoLevel3Name': instance.geoLevel3Name,
      'geoLevel4Id': instance.geoLevel4Id,
      'geoLevel4Code': instance.geoLevel4Code,
      'geoLevel4Name': instance.geoLevel4Name,
      'geoLevel5Id': instance.geoLevel5Id,
      'geoLevel5Code': instance.geoLevel5Code,
      'geoLevel5Name': instance.geoLevel5Name,
      'levelType': instance.levelType,
      'levelFullcode': instance.levelFullcode,
      'siteType': instance.siteType,
      'siteCode': instance.siteCode,
      'siteName': instance.siteName,
      'workStatus': instance.workStatus,
      'workStartedOn': instance.workStartedOn,
      'workCompleted': instance.workCompleted,
      'siteAddress': instance.siteAddress,
      'priority': instance.priority,
      'priorityName': instance.priorityName,
      'potentialBeneficiaryCount': instance.potentialBeneficiaryCount,
      'functionType': instance.functionType,
      'placeType': instance.placeType,
      'powerSource': instance.powerSource,
      'distanceFromBorderKm': instance.distanceFromBorderKm,
      'distanceFromAirportKm': instance.distanceFromAirportKm,
      'custodianUsername': instance.custodianUsername,
      'custodianFullname': instance.custodianFullname,
      'custodianMobile': instance.custodianMobile,
      'custodianEmail': instance.custodianEmail,
      'custodianNid': instance.custodianNid,
      'custodianMonthlyRent': instance.custodianMonthlyRent,
      'custodianAddress': instance.custodianAddress,
      'verificationResult': instance.verificationResult,
      'verifiedOn': instance.verifiedOn,
      'verifiedAt': instance.verifiedAt,
      'verifierUsername': instance.verifierUsername,
      'verifierFullname': instance.verifierFullname,
      'verifierMobile': instance.verifierMobile,
      'verifierEmail': instance.verifierEmail,
      'verifierComments': instance.verifierComments,
      'relocRequestStatus': instance.relocRequestStatus,
      'relocRequestedOn': instance.relocRequestedOn,
      'relocApprovedOn': instance.relocApprovedOn,
      'oldLatitude': instance.oldLatitude,
      'oldLongitude': instance.oldLongitude,
      'oldAltitudeMtr': instance.oldAltitudeMtr,
      'relocReason': instance.relocReason,
      'relocApproverUsername': instance.relocApproverUsername,
      'relocApproverFullname': instance.relocApproverFullname,
      'relocApproverMobile': instance.relocApproverMobile,
      'relocApproverEmail': instance.relocApproverEmail,
      'createMethod': instance.createMethod,
      'createdOn': instance.createdOn,
      'createdAt': instance.createdAt,
      'creatorUsername': instance.creatorUsername,
      'creatorFullname': instance.creatorFullname,
      'creatorMobile': instance.creatorMobile,
      'creatorEmail': instance.creatorEmail,
      'creatorComments': instance.creatorComments,
      'digest': instance.digest,
      'productId': instance.productId,
      'productCode': instance.productCode,
      'productName': instance.productName,
      'productDescription': instance.productDescription,
      'productBrand': instance.productBrand,
      'demandUom': instance.demandUom,
      'demandUomQuantity': instance.demandUomQuantity,
      'productFullcode': instance.productFullcode,
      'borderSite': instance.borderSite,
      'airportSite': instance.airportSite,
      'tallSite': instance.tallSite,
      'restrictedArea': instance.restrictedArea,
    };

NoPole _$NoPoleFromJson(Map<String, dynamic> json) => NoPole(
      id: json['id'] as String?,
      latitude: (json['latitude'] as num?)?.toDouble(),
      longitude: (json['longitude'] as num?)?.toDouble(),
      altitudeMtr: json['altitudeMtr'] as num?,
      pillarType: json['pillarType'] as String?,
      agencyId: json['agencyId'] as String?,
      agencyCode: json['agencyCode'] as String?,
      agencyName: json['agencyName'] as String?,
      projectId: json['projectId'] as String?,
      projectCode: json['projectCode'] as String?,
      projectName: json['projectName'] as String?,
      areaType: json['areaType'] as String?,
      areaLevel: json['areaLevel'] as int?,
      countryCode: json['countryCode'] as String?,
      countryName: json['countryName'] as String?,
      geoLevel1Id: json['geoLevel1Id'] as String?,
      geoLevel1Code: json['geoLevel1Code'] as String?,
      geoLevel1Name: json['geoLevel1Name'] as String?,
      geoLevel2id: json['geoLevel2id'] as String?,
      geoLevel2Code: json['geoLevel2Code'] as String?,
      geoLevel2Name: json['geoLevel2Name'] as String?,
      geoLevel3Id: json['geoLevel3Id'] as String?,
      geoLevel3Code: json['geoLevel3Code'] as String?,
      geoLevel3Name: json['geoLevel3Name'] as String?,
      geoLevel4Id: json['geoLevel4Id'] as String?,
      geoLevel4Code: json['geoLevel4Code'] as String?,
      geoLevel4Name: json['geoLevel4Name'] as String?,
      geoLevel5Id: json['geoLevel5Id'] as String?,
      geoLevel5Code: json['geoLevel5Code'] as String?,
      geoLevel5Name: json['geoLevel5Name'] as String?,
      levelType: json['levelType'] as String?,
      levelFullcode: json['levelFullcode'] as String?,
      siteType: json['siteType'] as String?,
      siteCode: json['siteCode'] as String?,
      siteName: json['siteName'] as String?,
      workStatus: json['workStatus'] as String?,
      workStartedOn: json['workStartedOn'] as String?,
      workCompleted: json['workCompleted'] as String?,
      siteAddress: json['siteAddress'] as String?,
      priority: json['priority'] as int?,
      priorityName: json['priorityName'] as String?,
      potentialBeneficiaryCount: json['potentialBeneficiaryCount'] as num?,
      functionType: json['functionType'] as String?,
      placeType: json['placeType'] as String?,
      powerSource: json['powerSource'] as String?,
      distanceFromBorderKm: json['distanceFromBorderKm'] as num?,
      distanceFromAirportKm: json['distanceFromAirportKm'] as num?,
      custodianUsername: json['custodianUsername'] as String?,
      custodianFullname: json['custodianFullname'] as String?,
      custodianMobile: json['custodianMobile'] as String?,
      custodianEmail: json['custodianEmail'] as String?,
      custodianNid: json['custodianNid'] as String?,
      custodianMonthlyRent: json['custodianMonthlyRent'] as num?,
      custodianAddress: json['custodianAddress'] as String?,
      verificationResult: json['verificationResult'] as String?,
      verifiedOn: json['verifiedOn'] as String?,
      verifiedAt: json['verifiedAt'] as String?,
      verifierUsername: json['verifierUsername'] as String?,
      verifierFullname: json['verifierFullname'] as String?,
      verifierMobile: json['verifierMobile'] as String?,
      verifierEmail: json['verifierEmail'] as String?,
      verifierComments: json['verifierComments'] as String?,
      relocRequestStatus: json['relocRequestStatus'] as String?,
      relocRequestedOn: json['relocRequestedOn'] as String?,
      relocApprovedOn: json['relocApprovedOn'] as String?,
      oldLatitude: json['oldLatitude'] as num?,
      oldLongitude: json['oldLongitude'] as num?,
      oldAltitudeMtr: json['oldAltitudeMtr'] as num?,
      relocReason: json['relocReason'] as String?,
      relocApproverUsername: json['relocApproverUsername'] as String?,
      relocApproverFullname: json['relocApproverFullname'] as String?,
      relocApproverMobile: json['relocApproverMobile'] as String?,
      relocApproverEmail: json['relocApproverEmail'] as String?,
      createMethod: json['createMethod'] as String?,
      createdOn: json['createdOn'] as String?,
      createdAt: json['createdAt'] as String?,
      creatorUsername: json['creatorUsername'] as String?,
      creatorFullname: json['creatorFullname'] as String?,
      creatorMobile: json['creatorMobile'] as String?,
      creatorEmail: json['creatorEmail'] as String?,
      creatorComments: json['creatorComments'] as String?,
      digest: json['digest'] as String?,
      productId: json['productId'] as String?,
      productCode: json['productCode'] as String?,
      productName: json['productName'] as String?,
      productDescription: json['productDescription'] as String?,
      productBrand: json['productBrand'] as String?,
      demandUom: json['demandUom'] as String?,
      demandUomQuantity: json['demandUomQuantity'] as num?,
      productFullcode: json['productFullcode'] as String?,
      borderSite: json['borderSite'] as bool?,
      airportSite: json['airportSite'] as bool?,
      tallSite: json['tallSite'] as bool?,
      restrictedArea: json['restrictedArea'] as bool?,
    );

Map<String, dynamic> _$NoPoleToJson(NoPole instance) => <String, dynamic>{
      'id': instance.id,
      'latitude': instance.latitude,
      'longitude': instance.longitude,
      'altitudeMtr': instance.altitudeMtr,
      'pillarType': instance.pillarType,
      'agencyId': instance.agencyId,
      'agencyCode': instance.agencyCode,
      'agencyName': instance.agencyName,
      'projectId': instance.projectId,
      'projectCode': instance.projectCode,
      'projectName': instance.projectName,
      'areaType': instance.areaType,
      'areaLevel': instance.areaLevel,
      'countryCode': instance.countryCode,
      'countryName': instance.countryName,
      'geoLevel1Id': instance.geoLevel1Id,
      'geoLevel1Code': instance.geoLevel1Code,
      'geoLevel1Name': instance.geoLevel1Name,
      'geoLevel2id': instance.geoLevel2id,
      'geoLevel2Code': instance.geoLevel2Code,
      'geoLevel2Name': instance.geoLevel2Name,
      'geoLevel3Id': instance.geoLevel3Id,
      'geoLevel3Code': instance.geoLevel3Code,
      'geoLevel3Name': instance.geoLevel3Name,
      'geoLevel4Id': instance.geoLevel4Id,
      'geoLevel4Code': instance.geoLevel4Code,
      'geoLevel4Name': instance.geoLevel4Name,
      'geoLevel5Id': instance.geoLevel5Id,
      'geoLevel5Code': instance.geoLevel5Code,
      'geoLevel5Name': instance.geoLevel5Name,
      'levelType': instance.levelType,
      'levelFullcode': instance.levelFullcode,
      'siteType': instance.siteType,
      'siteCode': instance.siteCode,
      'siteName': instance.siteName,
      'workStatus': instance.workStatus,
      'workStartedOn': instance.workStartedOn,
      'workCompleted': instance.workCompleted,
      'siteAddress': instance.siteAddress,
      'priority': instance.priority,
      'priorityName': instance.priorityName,
      'potentialBeneficiaryCount': instance.potentialBeneficiaryCount,
      'functionType': instance.functionType,
      'placeType': instance.placeType,
      'powerSource': instance.powerSource,
      'distanceFromBorderKm': instance.distanceFromBorderKm,
      'distanceFromAirportKm': instance.distanceFromAirportKm,
      'custodianUsername': instance.custodianUsername,
      'custodianFullname': instance.custodianFullname,
      'custodianMobile': instance.custodianMobile,
      'custodianEmail': instance.custodianEmail,
      'custodianNid': instance.custodianNid,
      'custodianMonthlyRent': instance.custodianMonthlyRent,
      'custodianAddress': instance.custodianAddress,
      'verificationResult': instance.verificationResult,
      'verifiedOn': instance.verifiedOn,
      'verifiedAt': instance.verifiedAt,
      'verifierUsername': instance.verifierUsername,
      'verifierFullname': instance.verifierFullname,
      'verifierMobile': instance.verifierMobile,
      'verifierEmail': instance.verifierEmail,
      'verifierComments': instance.verifierComments,
      'relocRequestStatus': instance.relocRequestStatus,
      'relocRequestedOn': instance.relocRequestedOn,
      'relocApprovedOn': instance.relocApprovedOn,
      'oldLatitude': instance.oldLatitude,
      'oldLongitude': instance.oldLongitude,
      'oldAltitudeMtr': instance.oldAltitudeMtr,
      'relocReason': instance.relocReason,
      'relocApproverUsername': instance.relocApproverUsername,
      'relocApproverFullname': instance.relocApproverFullname,
      'relocApproverMobile': instance.relocApproverMobile,
      'relocApproverEmail': instance.relocApproverEmail,
      'createMethod': instance.createMethod,
      'createdOn': instance.createdOn,
      'createdAt': instance.createdAt,
      'creatorUsername': instance.creatorUsername,
      'creatorFullname': instance.creatorFullname,
      'creatorMobile': instance.creatorMobile,
      'creatorEmail': instance.creatorEmail,
      'creatorComments': instance.creatorComments,
      'digest': instance.digest,
      'productId': instance.productId,
      'productCode': instance.productCode,
      'productName': instance.productName,
      'productDescription': instance.productDescription,
      'productBrand': instance.productBrand,
      'demandUom': instance.demandUom,
      'demandUomQuantity': instance.demandUomQuantity,
      'productFullcode': instance.productFullcode,
      'borderSite': instance.borderSite,
      'airportSite': instance.airportSite,
      'tallSite': instance.tallSite,
      'restrictedArea': instance.restrictedArea,
    };
