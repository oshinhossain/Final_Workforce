// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'transport_order_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

TransportOrderModel _$TransportOrderModelFromJson(Map<String, dynamic> json) =>
    TransportOrderModel(
      id: json['id'] as String?,
      countryCode: json['countryCode'] as String?,
      countryName: json['countryName'] as String?,
      transportationMode: json['transportationMode'] as String?,
      transportType: json['transportType'] as String?,
      ticketNo: json['ticketNo'] as String?,
      orderingAgencyId: json['orderingAgencyId'] as String?,
      orderingAgencyCode: json['orderingAgencyCode'] as String?,
      orderingAgencyName: json['orderingAgencyName'] as String?,
      transporterAgencyId: json['transporterAgencyId'] as String?,
      transporterAgencyCode: json['transporterAgencyCode'] as String?,
      transporterAgencyName: json['transporterAgencyName'] as String?,
      receiverAgencyId: json['receiverAgencyId'] as String?,
      receiverAgencyCode: json['receiverAgencyCode'] as String?,
      receiverAgencyName: json['receiverAgencyName'] as String?,
      transportOrderNo: json['transportOrderNo'] as String?,
      transportOrderDate: json['transportOrderDate'] as String?,
      baseAmount: json['baseAmount'] as num?,
      vatAmount: json['vatAmount'] as num?,
      grossAmount: (json['grossAmount'] as num?)?.toDouble(),
      cu: json['cu'] as String?,
      totalQuantity: json['totalQuantity'] as num?,
      driverNames: json['driverNames'] as String?,
      driverUsernames: json['driverUsernames'] as String?,
      driverMobiles: json['driverMobiles'] as String?,
      inspectorAtLoadingPointFullname:
          json['inspectorAtLoadingPointFullname'] as String?,
      inspectorAtLoadingPointUsername:
          json['inspectorAtLoadingPointUsername'] as String?,
      inspectorAtLoadingPointEmail:
          json['inspectorAtLoadingPointEmail'] as String?,
      inspectorAtLoadingPointMobile:
          json['inspectorAtLoadingPointMobile'] as String?,
      inspectorRemarkAtLoadingPoint:
          json['inspectorRemarkAtLoadingPoint'] as String?,
      receiverFullname: json['receiverFullname'] as String?,
      receiverUsername: json['receiverUsername'] as String?,
      receiverEmail: json['receiverEmail'] as String?,
      receiverMobile: json['receiverMobile'] as String?,
      receivedOn: json['receivedOn'] as String?,
      inspectorAtDropLocationFullname:
          json['inspectorAtDropLocationFullname'] as String?,
      inspectorAtDropLocationUsername:
          json['inspectorAtDropLocationUsername'] as String?,
      inspectorAtDropLocationEmail:
          json['inspectorAtDropLocationEmail'] as String?,
      inspectorAtDropLocationMobile:
          json['inspectorAtDropLocationMobile'] as String?,
      inspectorRemarkAtDropLocation:
          json['inspectorRemarkAtDropLocation'] as String?,
      sourceLocId: json['sourceLocId'] as String?,
      sourceLocName: json['sourceLocName'] as String?,
      sourceLatitude: (json['sourceLatitude'] as num?)?.toDouble(),
      sourceLongitude: (json['sourceLongitude'] as num?)?.toDouble(),
      destinationLocId: json['destinationLocId'] as String?,
      destinationLocName: json['destinationLocName'] as String?,
      destinationLatitude: (json['destinationLatitude'] as num?)?.toDouble(),
      destinationLongitude: (json['destinationLongitude'] as num?)?.toDouble(),
      travelPathId: json['travelPathId'] as String?,
      distanceKm: (json['distanceKm'] as num?)?.toDouble(),
      creatorFullname: json['creatorFullname'] as String?,
      creatorUsername: json['creatorUsername'] as String?,
      creatorEmail: json['creatorEmail'] as String?,
      creatorMobile: json['creatorMobile'] as String?,
      createdAt: json['createdAt'] as String?,
      editorFullname: json['editorFullname'] as String?,
      editorUsername: json['editorUsername'] as String?,
      editorEmail: json['editorEmail'] as String?,
      editorMobile: json['editorMobile'] as String?,
      lastEditedAt: json['lastEditedAt'] as String?,
      orderApproverCount: json['orderApproverCount'] as num?,
      approvedby1Fullname: json['approvedby1Fullname'] as String?,
      approvedby1Username: json['approvedby1Username'] as String?,
      approvedby1Email: json['approvedby1Email'] as String?,
      approvedby1Mobile: json['approvedby1Mobile'] as String?,
      approved1On: json['approved1On'] as String?,
      approvedby2Fullname: json['approvedby2Fullname'] as String?,
      approvedby2Username: json['approvedby2Username'] as String?,
      approvedby2Email: json['approvedby2Email'] as String?,
      approvedby2Mobile: json['approvedby2Mobile'] as String?,
      approved2On: json['approved2On'] as String?,
      approvedby3Fullname: json['approvedby3Fullname'] as String?,
      approvedby3Username: json['approvedby3Username'] as String?,
      approvedby3Email: json['approvedby3Email'] as String?,
      approvedby3Mobile: json['approvedby3Mobile'] as String?,
      approved3On: json['approved3On'] as String?,
      transporterAcceptorFullname:
          json['transporterAcceptorFullname'] as String?,
      transporterAcceptorUsername:
          json['transporterAcceptorUsername'] as String?,
      transporterAcceptorEmail: json['transporterAcceptorEmail'] as String?,
      transporterAcceptorMobile: json['transporterAcceptorMobile'] as String?,
      transporterAcceptorType: json['transporterAcceptorType'] as String?,
      transporterAcceptedOn: json['transporterAcceptedOn'] as String?,
      receivingPartyAcceptorFullname:
          json['receivingPartyAcceptorFullname'] as String?,
      receivingPartyAcceptorUsername:
          json['receivingPartyAcceptorUsername'] as String?,
      receivingPartyAcceptorEmail:
          json['receivingPartyAcceptorEmail'] as String?,
      receivingPartyrAcceptorMobile:
          json['receivingPartyrAcceptorMobile'] as String?,
      receivingPartyAcceptorType: json['receivingPartyAcceptorType'] as String?,
      receivingPartyAcceptedOn: json['receivingPartyAcceptedOn'] as String?,
      status: json['status'] as String?,
      digest: json['digest'] as String?,
      whManagerFullname: json['whManagerFullname'] as String?,
      whManagerUsername: json['whManagerUsername'] as String?,
      whManagerEmail: json['whManagerEmail'] as String?,
      whManagerMobile: json['whManagerMobile'] as String?,
      whCode: json['whCode'] as String?,
      whName: json['whName'] as String?,
      whAddress: json['whAddress'] as String?,
      latestEtd: json['latestEtd'] as String?,
      masterViewModel: json['masterViewModel'] as String?,
      singleDestinationLoc: json['singleDestinationLoc'] as bool?,
      singleInspectorAtDropLocation:
          json['singleInspectorAtDropLocation'] as bool?,
      singleReceiver: json['singleReceiver'] as bool?,
      acceptedByReceiver: json['acceptedByReceiver'] as bool?,
      acceptedByTransporter: json['acceptedByTransporter'] as bool?,
      acceptedByReceivingParty: json['acceptedByReceivingParty'] as bool?,
      approver1Passed: json['approver1Passed'] as bool?,
      approver2Passed: json['approver2Passed'] as bool?,
      approver3Passed: json['approver3Passed'] as bool?,
    );

Map<String, dynamic> _$TransportOrderModelToJson(
        TransportOrderModel instance) =>
    <String, dynamic>{
      'id': instance.id,
      'countryCode': instance.countryCode,
      'countryName': instance.countryName,
      'transportationMode': instance.transportationMode,
      'transportType': instance.transportType,
      'ticketNo': instance.ticketNo,
      'orderingAgencyId': instance.orderingAgencyId,
      'orderingAgencyCode': instance.orderingAgencyCode,
      'orderingAgencyName': instance.orderingAgencyName,
      'transporterAgencyId': instance.transporterAgencyId,
      'transporterAgencyCode': instance.transporterAgencyCode,
      'transporterAgencyName': instance.transporterAgencyName,
      'receiverAgencyId': instance.receiverAgencyId,
      'receiverAgencyCode': instance.receiverAgencyCode,
      'receiverAgencyName': instance.receiverAgencyName,
      'transportOrderNo': instance.transportOrderNo,
      'transportOrderDate': instance.transportOrderDate,
      'baseAmount': instance.baseAmount,
      'vatAmount': instance.vatAmount,
      'grossAmount': instance.grossAmount,
      'cu': instance.cu,
      'totalQuantity': instance.totalQuantity,
      'driverNames': instance.driverNames,
      'driverUsernames': instance.driverUsernames,
      'driverMobiles': instance.driverMobiles,
      'inspectorAtLoadingPointFullname':
          instance.inspectorAtLoadingPointFullname,
      'inspectorAtLoadingPointUsername':
          instance.inspectorAtLoadingPointUsername,
      'inspectorAtLoadingPointEmail': instance.inspectorAtLoadingPointEmail,
      'inspectorAtLoadingPointMobile': instance.inspectorAtLoadingPointMobile,
      'inspectorRemarkAtLoadingPoint': instance.inspectorRemarkAtLoadingPoint,
      'receiverFullname': instance.receiverFullname,
      'receiverUsername': instance.receiverUsername,
      'receiverEmail': instance.receiverEmail,
      'receiverMobile': instance.receiverMobile,
      'receivedOn': instance.receivedOn,
      'inspectorAtDropLocationFullname':
          instance.inspectorAtDropLocationFullname,
      'inspectorAtDropLocationUsername':
          instance.inspectorAtDropLocationUsername,
      'inspectorAtDropLocationEmail': instance.inspectorAtDropLocationEmail,
      'inspectorAtDropLocationMobile': instance.inspectorAtDropLocationMobile,
      'inspectorRemarkAtDropLocation': instance.inspectorRemarkAtDropLocation,
      'sourceLocId': instance.sourceLocId,
      'sourceLocName': instance.sourceLocName,
      'sourceLatitude': instance.sourceLatitude,
      'sourceLongitude': instance.sourceLongitude,
      'destinationLocId': instance.destinationLocId,
      'destinationLocName': instance.destinationLocName,
      'destinationLatitude': instance.destinationLatitude,
      'destinationLongitude': instance.destinationLongitude,
      'travelPathId': instance.travelPathId,
      'distanceKm': instance.distanceKm,
      'creatorFullname': instance.creatorFullname,
      'creatorUsername': instance.creatorUsername,
      'creatorEmail': instance.creatorEmail,
      'creatorMobile': instance.creatorMobile,
      'createdAt': instance.createdAt,
      'editorFullname': instance.editorFullname,
      'editorUsername': instance.editorUsername,
      'editorEmail': instance.editorEmail,
      'editorMobile': instance.editorMobile,
      'lastEditedAt': instance.lastEditedAt,
      'orderApproverCount': instance.orderApproverCount,
      'approvedby1Fullname': instance.approvedby1Fullname,
      'approvedby1Username': instance.approvedby1Username,
      'approvedby1Email': instance.approvedby1Email,
      'approvedby1Mobile': instance.approvedby1Mobile,
      'approved1On': instance.approved1On,
      'approvedby2Fullname': instance.approvedby2Fullname,
      'approvedby2Username': instance.approvedby2Username,
      'approvedby2Email': instance.approvedby2Email,
      'approvedby2Mobile': instance.approvedby2Mobile,
      'approved2On': instance.approved2On,
      'approvedby3Fullname': instance.approvedby3Fullname,
      'approvedby3Username': instance.approvedby3Username,
      'approvedby3Email': instance.approvedby3Email,
      'approvedby3Mobile': instance.approvedby3Mobile,
      'approved3On': instance.approved3On,
      'transporterAcceptorFullname': instance.transporterAcceptorFullname,
      'transporterAcceptorUsername': instance.transporterAcceptorUsername,
      'transporterAcceptorEmail': instance.transporterAcceptorEmail,
      'transporterAcceptorMobile': instance.transporterAcceptorMobile,
      'transporterAcceptorType': instance.transporterAcceptorType,
      'transporterAcceptedOn': instance.transporterAcceptedOn,
      'receivingPartyAcceptorFullname': instance.receivingPartyAcceptorFullname,
      'receivingPartyAcceptorUsername': instance.receivingPartyAcceptorUsername,
      'receivingPartyAcceptorEmail': instance.receivingPartyAcceptorEmail,
      'receivingPartyrAcceptorMobile': instance.receivingPartyrAcceptorMobile,
      'receivingPartyAcceptorType': instance.receivingPartyAcceptorType,
      'receivingPartyAcceptedOn': instance.receivingPartyAcceptedOn,
      'status': instance.status,
      'digest': instance.digest,
      'whManagerFullname': instance.whManagerFullname,
      'whManagerUsername': instance.whManagerUsername,
      'whManagerEmail': instance.whManagerEmail,
      'whManagerMobile': instance.whManagerMobile,
      'whCode': instance.whCode,
      'whName': instance.whName,
      'whAddress': instance.whAddress,
      'latestEtd': instance.latestEtd,
      'masterViewModel': instance.masterViewModel,
      'singleDestinationLoc': instance.singleDestinationLoc,
      'singleInspectorAtDropLocation': instance.singleInspectorAtDropLocation,
      'singleReceiver': instance.singleReceiver,
      'acceptedByReceiver': instance.acceptedByReceiver,
      'acceptedByTransporter': instance.acceptedByTransporter,
      'acceptedByReceivingParty': instance.acceptedByReceivingParty,
      'approver1Passed': instance.approver1Passed,
      'approver2Passed': instance.approver2Passed,
      'approver3Passed': instance.approver3Passed,
    };
